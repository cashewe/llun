name: Build and publish llun_mcp binaries

on:
  release:
    types: [published]

permissions:
  contents: write   # needed to upload release assets

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            target: x86_64-unknown-linux-musl
            ext: ""
          - runner: ubuntu-latest
            target: aarch64-unknown-linux-musl
            ext: ""
          - runner: macos-latest
            target: x86_64-apple-darwin
            ext: ""
          - runner: macos-latest
            target: aarch64-apple-darwin
            ext: ""
          - runner: windows-latest
            target: x86_64-pc-windows-msvc
            ext: ".exe"

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Add target
      run: rustup target add ${{ matrix.target }} || true

    - name: Build llun_mcp
      run: cargo build -p llun_mcp --release --target ${{ matrix.target }}

    - name: Prepare asset
      run: |
        mkdir -p release
        BIN=target/${{ matrix.target }}/release/llun-mcp${{ matrix.ext }}
        if [ ! -f "$BIN" ]; then
          echo "Built binary not found: $BIN" && ls -la target/${{ matrix.target }}/release || exit 1
        fi
        cp "$BIN" release/llun-mcp-${{ github.event.release.tag_name }}-${{ matrix.target }}${{ matrix.ext }}
      shell: bash

    - name: Upload asset to release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: release/llun-mcp-${{ github.event.release.tag_name }}-${{ matrix.target }}${{ matrix.ext }}
        asset_name: llun-mcp-${{ github.event.release.tag_name }}-${{ matrix.target }}${{ matrix.ext }}
        asset_content_type: application/octet-stream

  publish-npm:
    runs-on: ubuntu-latest
    needs: build   # optional; ensures build job completed (rename if needed)
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'

    - name: Set package version from tag
      run: |
        TAG=${{ github.event.release.tag_name }}
        # remove leading v if present:
        VER=${TAG#v}
        cd npm/llun-mcp
        npm version --no-git $VER
      shell: bash

    - name: Publish to npm
      run: |
        cd npm/llun-mcp
        npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}